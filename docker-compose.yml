services:
    posts:
        build:
            context: ./src/posts
            dockerfile: Dockerfile
        container_name: post-service
        environment:
            - APP_ENV=local
            - APP_DEBUG=true
            - DB_CONNECTION=mongodb
            - DB_HOST=mongodb
            - DB_PORT=27018
            - ELASTICSEARCH_HOST=elasticsearch
            - ELASTICSEARCH_PORT=9200
        volumes:
            - ./src/posts:/var/www
        networks:
            - es-net
        depends_on:
            - mongodb
            - elasticsearch

    users:
        build:
            context: ./src/users
            dockerfile: Dockerfile
        container_name: user-service
        environment:
            - APP_ENV=local
            - APP_DEBUG=true
            - DB_CONNECTION=mongodb
            - DB_HOST=mongodb
            - DB_PORT=27018
            - ELASTICSEARCH_HOST=elasticsearch
            - ELASTICSEARCH_PORT=9200
        volumes:
            - ./src/users:/var/www
        networks:
            - es-net
        depends_on:
            - mysql
            - elasticsearch

    nginx:
        image: nginx:alpine
        container_name: nginx
        ports:
            - "8080:80"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/conf.d/:/etc/nginx/conf.d/
            - .:/var/www
        depends_on:
            - posts
            - users
        networks:
            - es-net

    rabbitmq:
        image: rabbitmq:3-management
        hostname: 'rabbitmq'
        container_name: 'rabbitmq'
        ports:
        - 5672:5672
        - 15672:15672
        environment:
        - RABBITMQ_DEFAULT_USER=admin
        - RABBITMQ_DEFAULT_PASS=rabbit@123456
        volumes:
        - ./data/:/var/lib/rabbitmq/
        - ./log/:/var/log/rabbitmq

    mongodb:
        image: mongo:latest
        container_name: mongodb
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=123456
        volumes:
            - mongodb_data:/data/db
        networks:
            - es-net
        ports:
            - "27018:27017"

    mysql:
        image: mysql:8.0
        container_name: mysql
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: 123456
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - es-net
        ports:
            - "3307:3306"

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.15.2
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
            - xpack.security.enabled=false
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - es_data:/usr/share/elasticsearch/data
        networks:
            - es-net
        ports:
            - "9200:9200"
            - "9300:9300"

    kibana:
        image: docker.elastic.co/kibana/kibana:8.15.2
        container_name: kibana
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        depends_on:
            - elasticsearch
        ports:
            - "5601:5601"
        volumes:
            - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
        networks:
            - es-net

    # logstash:
    #     image: docker.elastic.co/logstash/logstash:8.15.2
    #     container_name: logstash
    #     volumes:
    #         - ./logstash/pipeline:/usr/share/logstash/pipeline
    #     ports:
    #         - "5044:5044"
    #         - "5000:5000"
    #         - "9600:9600"
    #     depends_on:
    #         - elasticsearch
    #     networks:
    #         - es-net

# Volumes
volumes:
    mongodb_data:
    es_data:
    mysql_data:

# Networks
networks:
    es-net:
        driver: bridge
